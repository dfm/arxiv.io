#!/usr/bin/env python
# -*- coding: utf-8 -*-

from __future__ import division, print_function, absolute_import
import logging
from datetime import date, timedelta

from arxiv import create_app
from arxiv.scraper import download, parse


if __name__ == "__main__":
    import argparse

    # Parse the command line arguments.
    parser = argparse.ArgumentParser(description="Scrape the arXiv metadata.")
    parser.add_argument("--since", default=None, help="The starting date.")
    parser.add_argument("--config", default=None,
                        help="The path to the local configuration file.")
    parser.add_argument("--log", default=None,
                        help="The path to the log file.")
    args = parser.parse_args()

    largs = dict(level=logging.INFO,
                 format="[%(asctime)s] %(name)s:%(levelname)s:%(message)s")
    if args.log is not None:
        largs["filename"] = args.log
    logging.basicConfig(**largs)

    # Initialize a flask app.
    app = create_app(args.config)

    # Set up the app in a request context.
    with app.test_request_context():
        if args.since is not None:
            since = args.since
        else:
            yesterday = date.today() - timedelta(1)
            since = yesterday.strftime("%Y-%m-%d")

        logging.info("Fetching metadata since {0}".format(since))
        l = download(since)

        logging.info("Parsing results")
        map(parse, l)
